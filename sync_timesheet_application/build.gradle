import java.util.regex.Matcher

plugins {
    id 'java'
    id 'maven-publish'
}

group "$groupId"
version "$version"

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':shared')
    implementation project(':timesheet')
    implementation project(':workorder_access')
    implementation project(':sync_logger')

    implementation 'com.opencsv:opencsv'
    implementation group: 'org.json', name: 'json', version: '20220320'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.threeten:threeten-extra'

    testImplementation 'org.assertj:assertj-core'
    testImplementation(testFixtures(project(":timesheet")))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.0.0'
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("$repoUrl")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = "$groupId"
            artifactId = "sync_timesheet_application"
            version = "$version"

            from(components.java)
        }
    }
}


tasks.withType(GenerateMavenPom).all {
    doLast {
        File file = new File("$buildDir/publications/gpr/pom-default.xml")
        def text = file.text
        def pattern = "(?s)(<dependencyManagement>.+?<dependencies>)(.+?)(</dependencies>.+?</dependencyManagement>)"
        Matcher matcher = text =~ pattern
        if (matcher.find()) {
            text = text.replaceFirst(pattern, "")
            def firstDeps = matcher.group(2)
            text = text.replaceFirst(pattern, '$1$2' + firstDeps + '$3')
        }
        file.write(text)
    }
}