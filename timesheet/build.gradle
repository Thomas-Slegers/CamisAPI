import java.util.regex.Matcher

plugins {
    id 'java'
    id "java-test-fixtures"
    id 'maven-publish'
}

group 'com.cegeka.horizon.camis.api.timesheet'
version "$version"

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':shared')

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.threeten:threeten-extra'

    testFixturesImplementation project(':shared')

    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'

}

test {
    useJUnitPlatform()
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/wardbryon/CamisAPI")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = "com.cegeka.horizon.camis"
            artifactId = "timesheet"
            version = "1.0.0"

            from(components.java)
        }
    }
}

tasks.withType(GenerateMavenPom).all {
    doLast {
        File file = new File("$buildDir/publications/gpr/pom-default.xml")
        def text = file.text
        def pattern = "(?s)(<dependencyManagement>.+?<dependencies>)(.+?)(</dependencies>.+?</dependencyManagement>)"
        Matcher matcher = text =~ pattern
        if (matcher.find()) {
            text = text.replaceFirst(pattern, "")
            def firstDeps = matcher.group(2)
            text = text.replaceFirst(pattern, '$1$2' + firstDeps + '$3')
        }
        file.write(text)
    }
}